AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  tmb-api
  Sample SAM Template for tmb-api

Globals:
  Function:
    Timeout: 15
    MemorySize: 128

Parameters:
  TMBAPPID:
    Type: String
    Description: TMB API Application ID
  TMBAPPKEY:
    Type: String
    Description: TMB API Application Key

Resources:
  TMBBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: tmbinfo

  TMBSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: tmb-secrets
      Description: Secrets for TMB
      SecretString: !Sub |
        {
          "TMB_APP_ID": "${TMBAPPID}",
          "TMB_APP_KEY": "${TMBAPPKEY}"
        }

  TMBGetRoute:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tmb_get_route/
      Description: TMB Get Route from API in JSON format
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          BucketName: !Ref TMBBucket
          SecretName: !Ref TMBSecrets
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: arn:aws:s3:::tmbinfo/*
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref TMBSecrets
      Events:
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 * * ? *)
            # Schedule: rate(1 minute)

  TMBGetRouteUrl:
    Type: AWS::Lambda::Url
    Properties:
      AuthType: NONE
      TargetFunctionArn: !GetAtt TMBGetRoute.Arn

  TMBGetRouteUrlPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref TMBGetRoute
      Principal: '*'
      FunctionUrlAuthType: NONE

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: TMB Route Notifications
      Subscription:
        - Endpoint: joanclaverol@gmail.com
          Protocol: email

  TMBTransformRouteToCSV:
    Type: AWS::Serverless::Function
    Properties:
      Description: TMB Transform Route to CSV
      CodeUri: tmb_transform_route_to_csv/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        TMBBucketEvent:
          Type: S3
          Properties:
            Bucket: !Ref TMBBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: routes_from_api/
                  - Name: suffix
                    Value: .json
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::tmbinfo/routes_from_api/*
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: arn:aws:s3:::tmbinfo/routes_csv/*
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt SendSNSNotificationFunction.Arn

  SendSNSNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tmb_send_sns_notification/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SNSTopicArn: !Ref SNSTopic
      Events:
        TMBTransformRouteToCSVCompletion:
          Type: S3
          Properties:
            Bucket: !Ref TMBBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: routes_csv/
                  - Name: suffix
                    Value: .csv
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref SNSTopic
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::tmbinfo/routes_csv/*

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: TMBUserPool
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: TMBUserPoolClient
      GenerateSecret: false
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - https://example.com/callback
      LogoutURLs:
        - https://example.com/logout

  TMBApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: TMB API
      StageName: Prod
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: TMB API
          version: '1.0'
        paths:
          /get-route:
            get:
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TMBGetRoute.Arn}/invocations
                httpMethod: POST
                type: aws_proxy
              responses: {}

Outputs:
  TMBBucket:
    Description: TMB Bucket
    Value: !Ref TMBBucket
  TMBGetRoute:
    Description: TMB Get Route
    Value: !GetAtt TMBGetRoute.Arn
  TMBGetRouteUrl:
    Description: TMB Get Route URL
    Value: !GetAtt TMBGetRouteUrl.FunctionUrl
  SNSTopicArn:
    Description: SNS Topic ARN for route notifications
    Value: !Ref SNSTopic