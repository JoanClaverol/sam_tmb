AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  Integration of the API from TMB (Transports Metropolitans de Barcelona)
  with AWS services

Globals:
  Function:
    Timeout: 15
    MemorySize: 128

Parameters:
  TMBAPPID:
    Type: String
    Description: TMB API Application ID
  TMBAPPKEY:
    Type: String
    Description: TMB API Application Key
  BucketName:
    Type: String
    Description: S3 Bucket Name for deployment
    Default: tmbinfo
  Version:
    Type: String
    Description: API version (e.g., v1)
    Default: v1
  YourEmail:
    Type: String
    Description: Email address for the first Cognito user
    Default: joanclaverol@gmail.com

Resources:
  TMBBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

  TMBSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: tmb-secrets
      Description: Secrets for TMB
      SecretString: !Sub |
        {
          "TMB_APP_ID": "${TMBAPPID}",
          "TMB_APP_KEY": "${TMBAPPKEY}"
        }

  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UserPoolName: TestingUsers
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: true

  # Cognito User Pool Client
  UserPoolTokenClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - USER_PASSWORD_AUTH

  # Cognito User Pool User
  UserPoolUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      DesiredDeliveryMediums:
        - EMAIL
      Username: !Ref YourEmail
      UserPoolId: !Ref UserPool

  TMBApi:
    # DependsOn: UserPool
    Type: AWS::Serverless::Api
    Properties:
      Name: ServiceApi
      StageName: !Ref Version
      # DefinitionBody:
      #   Fn:Transform:
      #     Name: AWS::Include
      #     Parameters:
      #       Location: openapi.yaml
      Cors:
        AllowMethods: '''*'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
      Auth:
        Authorizers:
          CognitoAuthorizer:
            UserPoolArn: !GetAtt UserPool.Arn

  TMBGetRoute:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tmb_get_route/
      Description: TMB Get Route from API in JSON format
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          BucketName: !Ref BucketName
          SecretName: !Ref TMBSecrets
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:aws:s3:::${BucketName}/*
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Ref TMBSecrets
      Events:
        Get:
          # Example API call: https://woacksu732.execute-api.eu-west-3.amazonaws.com/v1/open?work_lat=41.373564&work_lon=2.146583
          Type: Api
          Properties:
            Path: /open
            RestApiId: !Ref TMBApi
            Method: GET
            RequestParameters:
              - method.request.querystring.work_lat:
                  Required: false
              - method.request.querystring.work_lon:
                  Required: false
        GetAutherised:
          Type: Api
          Properties:
            Path: /
            RestApiId: !Ref TMBApi
            Method: GET
            RequestParameters:
              - method.request.querystring.work_lat:
                  Required: false
              - method.request.querystring.work_lon:
                  Required: false
            Auth:
              Authorizer: CognitoAuthorizer
        ScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 * * ? *)

  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: TMB Route Notifications
      Subscription:
        - Endpoint: !Ref YourEmail
          Protocol: email

  TMBTransformRouteToCSV:
    Type: AWS::Serverless::Function
    Properties:
      Description: TMB Transform Route to CSV
      CodeUri: tmb_transform_route_to_csv/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        TMBBucketEvent:
          Type: S3
          Properties:
            Bucket: !Ref TMBBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: routes_from_api/
                  - Name: suffix
                    Value: .json
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub arn:aws:s3:::${BucketName}/routes_from_api/*
            - Effect: Allow
              Action:
                - s3:PutObject
              Resource: !Sub arn:aws:s3:::${BucketName}/routes_csv/*
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt SendSNSNotificationFunction.Arn

  SendSNSNotificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: tmb_send_sns_notification/
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          SNSTopicArn: !Ref SNSTopic
      Events:
        TMBTransformRouteToCSVCompletion:
          Type: S3
          Properties:
            Bucket: !Ref TMBBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: routes_csv/
                  - Name: suffix
                    Value: .csv
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref SNSTopic
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Sub arn:aws:s3:::${BucketName}/routes_csv/*

Outputs:
  TMBBucket:
    Description: TMB Bucket
    Value: !Ref TMBBucket

  OpenApiUrl:
    Description: API Gateway OpenAPI definition URL
    Value: !Sub https://${TMBApi}.execute-api.${AWS::Region}.amazonaws.com/${Version}/open

  AuthenticatedApiUrl:
    Description: Authenticated API URL
    Value: !Sub https://${TMBApi}.execute-api.${AWS::Region}.amazonaws.com/${Version}/

  APIDocumentation:
    Description: API Gateway Documentation URL
    Value: !Sub https://${TMBApi}.execute-api.${AWS::Region}.amazonaws.com/${Version}/documentation

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolTokenClient

  TMBGetRouteUrl:
    Description: TMB Get Route URL
    Value: !Sub https://${TMBApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-route

  SNSTopicArn:
    Description: SNS Topic ARN for route notifications
    Value: !Ref SNSTopic

  ApiGatewayInvokeURL:
    Description: API Gateway Invoke URL
    Value: !Sub https://${TMBApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/get-route